--- 10_CUL_HM.25158	2021-10-30 19:37:17.000000000 +0200
+++ 10_CUL_HM.pm	2021-11-09 06:33:21.527547057 +0100
@@ -1,7 +1,7 @@
 ##############################################
 ##############################################
 # CUL HomeMatic handler
-# $Id: 10_CUL_HM.pm 25158 2021-10-30 17:37:17Z martinp876 $
+# $Id: 10_CUL_HM.pm 25158 2021-11-08 Beta-User $
 
 package main;
 
@@ -84,6 +84,7 @@
 sub CUL_HM_getConfig($);
 sub CUL_HM_SndCmd($$);
 sub CUL_HM_responseSetup($$);
+sub CUL_HM_cSndRemove($);
 sub CUL_HM_eventP($$);
 sub CUL_HM_protState($$);
 sub CUL_HM_respPendRm($);
@@ -710,6 +711,7 @@
      CommandDelete(undef,$hash->{$_}) foreach (grep(/^channel_/,keys %{$hash}));
   }
   delete($modules{CUL_HM}{defptr}{$HMid});
+  delete $modules{CUL_HM}{helper}{primary} if devspec2array('TYPE=CUL_HM') == 1; #Beta-User: we need this to reactivate global events in rereadcfg case
   return undef;
 }
 sub CUL_HM_Rename($$) {##############################
@@ -1038,7 +1040,7 @@
       $attrVal =~ s/ //g; 
       my @newIO = CUL_HM_noDup(split(",",$attrVal));
       foreach my $nIO (@newIO){
-        return "$nIO does not support CUL_HM" if(InternalVal($nIO,"Clients","") !~ m /:CUL_HM:/);
+        return "$nIO does not support CUL_HM" if(InternalVal($nIO,"Clients","") !~ m /:CUL_HM:/ && InternalVal($nIO,'TYPE','') ne 'HMLAN');
         my $owner_ccu = InternalVal($nIO,'owner_CCU',undef);
         return "device $nIO already owned by $owner_ccu" if $owner_ccu && $owner_ccu ne $name;
         if (InternalVal($nIO,'TYPE','') eq 'HMLAN' ) {
@@ -1588,6 +1590,7 @@
   return undef if(  $dev->{NAME} eq $ntfy->{NAME}
                   ||$dev->{NAME} ne "global"
                  );# no notification about myself
+                 #Beta-User: deletion of IODev-TYPE devices is missing
   my $events = $dev->{CHANGED};
   return undef if(!$events); # Some previous notify deleted the array.
   #my $cws = join(";#",@{$dev->{CHANGED}});
@@ -1614,6 +1617,10 @@
         ||($evnt eq "RENAMED" && $defs{$new}{TYPE} eq "CUL_HM")){
         CUL_HM_Rename($new,$ent) if($evnt eq "RENAMED");
         CUL_HM_primaryDev() if ($ent eq $modules{CUL_HM}{helper}{primary});
+        if ($evnt eq 'DELETED' && $defs{$ent}{DEF} =~ m{\A[.]{6}\z} && defined $defs{$ent}->{IODev} && defined $defs{$ent}->{IODev}->{TYPE} && $defs{$ent}->{IODev}->{TYPE} =~ m/^(HMLAN|HMUARTLGW)$/) { 
+            my $ID = CUL_HM_hash2Id($defs{$ent});
+            IOWrite($defs{$ent}, '', "remove:$ID");
+        }
         $count++;
       }
       else{##------- update dependancies to IO devices used
@@ -1653,10 +1660,16 @@
       return ($count ? "CUL_HM: $count device(s) renamed or attributes changed due to DELETED or RENAMED event"
                      : undef);
     }
-    elsif (!$modules{CUL_HM}{helper}{initDone} && $evnt =~ m/(INITIALIZED|REREADCFG)/){# grep the first initialize
+    elsif (!$modules{CUL_HM}{helper}{initDone} && $evnt =~ m/INITIALIZED/){# grep the first initialize
       CUL_HM_updateConfig("startUp");
       InternalTimer(1,"CUL_HM_setupHMLAN", "initHMLAN", 0);#start asap once FHEM is operational
     }
+    elsif ($evnt =~ m/REREADCFG/){
+      Log3($ntfy,0,"[FAILURE] CUL_HM doesn't reliably support rereadcfg any longer! Restart FHEM instead.");
+      delete $modules{CUL_HM}{helper}{initDone};
+      InternalTimer(1,"CUL_HM_setupHMLAN", "initHMLAN", 0);
+      CUL_HM_updateConfig("startUp");
+    }
 #    elsif($evnt =~ m/(DEFINED)/  ){ Log 1,"Info --- $dev->{NAME} -->$ntfy->{NAME} :  $evnt";}
 #    elsif($evnt =~ m/(SHUTDOWN)/ ){ Log 1,"Info --- $dev->{NAME} -->$ntfy->{NAME} :  $evnt";}#SHUTDOWN|DELAYEDSHUTDOWN
 #    elsif($evnt =~ m/(SAVE)/     ){ Log 1,"Info --- $dev->{NAME} -->$ntfy->{NAME} :  $evnt";}
@@ -1756,6 +1769,8 @@
                                    $mh{dst}));
   if(!$mh{devH} && $mh{mTp} eq "00") { # generate device
     my $sname = "HM_$mh{src}";
+    #Beta-User: needs imo check first, if pair mode ist active to prevent creation on neighbour's devices: 
+    if ( InternalVal($mh{ioName},'hmPair',InternalVal(InternalVal($mh{ioName},'owner_CCU',''),'hmPair',0 ))) { # initiated via hm-pair-command => User wants actively have the device created                                                               
     my $defret = CommandDefine(undef,"$sname CUL_HM $mh{src}");
     Log 1,"CUL_HM Unknown device $sname is now defined ".(defined $defret ? " return: $defret" : "");
     
@@ -1781,6 +1796,7 @@
       }
     }
     $mh{devH}->{helper}{io}{nextSend} = $mh{rectm}+0.09 if(!defined($mh{devH}->{helper}{io}{nextSend}));# io couldn't set
+    } #Beta-User: End of hmPair is active check
   }
 
   my @entities = ("global"); #additional entities with events to be notifies
@@ -9501,7 +9517,7 @@
 }
 sub CUL_HM_updtRegDisp($$$) {
   my($hash,$list,$peerId)=@_;
-  my $listNo = $list + 0;
+  my $listNo += $list; #Beta-User: might prevent warning in https://forum.fhem.de/index.php/topic,123744.msg1183485.html#msg1183485
   my $name = $hash->{NAME};
   my $devId = substr(CUL_HM_name2Id($name),0,6);
   my $ioId = CUL_HM_IoId(CUL_HM_id2Hash($devId));
@@ -9613,17 +9629,18 @@
 }
 sub CUL_HM_refreshRegs($){ # renew all register readings from Regl_
   my $name = shift;
+  return if !defined $defs{$name}; #Beta-User: might prevent https://forum.fhem.de/index.php/topic,123744.msg1183485.html#msg1183485
   foreach(grep /\.?R-/,keys %{$defs{$name}{READINGS}}){
     delete $defs{$name}{READINGS}{$_};
   }
   my $peers = ReadingsVal($name,"peerList","");
-  my $dH = CUL_HM_getDeviceHash($defs{$name});
+  my $dH = CUL_HM_getDeviceHash($defs{$name}) // return;
   foreach(grep /\.?RegL_/,keys %{$defs{$name}{READINGS}}){
     my ($l,$p);
     ($l,$p) = ($1,$2) if($_ =~ m/RegL_(..)\.(.*)/);
     my $ps = $p;
-    $ps =~ s/_chn-\d\d$//;
-    if (!$p || $peers =~ m/$ps/){
+    $ps =~ s/_chn-\d\d$// if defined $ps; #Beta-User: https://forum.fhem.de/index.php/topic,123874.msg1185156.html#msg1185156
+    if (!$p || defined $ps && $peers =~ m/$ps/){
       CUL_HM_updtRegDisp($defs{$name},$l,CUL_HM_name2Id($p,$dH));
     }
     else{
@@ -9797,8 +9814,8 @@
 
 sub CUL_HM_getRegInfo($) { # 
   my ($name) = @_;
-  my $hash = $defs{$name};
-  my $devHash = CUL_HM_getDeviceHash($hash);
+  my $hash = $defs{$name} // return; #Beta-User: might prevent https://forum.fhem.de/index.php/topic,123744.msg1183485.html#msg1183485
+  my $devHash = CUL_HM_getDeviceHash($hash) // return;
   my $st  = AttrVal    ($devHash->{NAME},"subType", "" );
   my $md  = CUL_HM_getAliasModel($hash);#AttrVal    ($devHash->{NAME},"model"  , "" );
   my $roleD  = $hash->{helper}{role}{dev} ? 1 : 0;
@@ -10891,7 +10908,7 @@
     my $iom;
     ($iom) = grep {CUL_HM_operIObyIOName($_)} @{$hh->{io}{prefIO}}  if(!$iom && @{$hh->{io}{prefIO}});
     ($iom) = grep {$_ eq 'none'}              @{$hh->{io}{prefIO}}  if(!$iom && @{$hh->{io}{prefIO}});
-    return 0 if $iom && $iom eq 'none'; #Beta-User: frank in https://forum.fhem.de/index.php/topic,123238.msg1179447.html#msg1179447
+    return 0 if $iom && $iom eq 'none';
     if(!$iom){
       my @ioccu = grep{CUL_HM_operIObyIOName($_)} @{$defs{$hh->{io}{vccu}}{helper}{io}{ioList}};
       ($iom) =    ((sort {@{$hh->{mRssi}{io}{$b}}[0] <=>     # This is the best choice
@@ -10927,7 +10944,10 @@
     IOWrite($hash, "", "remove:".$ID) if(   defined($oldIODevH) && defined $oldIODevH->{NAME} 
                                          && $oldIODevH->{TYPE}  && $oldIODevH->{TYPE} =~ m/^(HMLAN|HMUARTLGW)$/); #IODev still old
     AssignIoPort($hash,$newIODevH->{NAME}); #  send preferred
-    Log3($hash, 2, "fhem.pl does not assign desired IODev $newIODevH->{NAME}!") if defined $newIODevH->{NAME} && $newIODevH->{NAME} ne $hash->{IODev}->{NAME};
+    if (defined $newIODevH->{NAME} && $newIODevH->{NAME} ne $hash->{IODev}->{NAME}) {
+        Log3($hash, 2, "fhem.pl does not assign desired IODev $newIODevH->{NAME} to $hash->{NAME}!") if !defined $hash->{IOAssignmentErrCnt};
+        $hash->{IOAssignmentErrCnt}++;
+    }
     $newIODevH = $hash->{IODev};
     if (   ($newIODevH->{TYPE} && $newIODevH->{TYPE} =~ m/^(HMLAN|HMUARTLGW)$/)
         || (   $newIODevH->{helper}{VTS_AES})){
