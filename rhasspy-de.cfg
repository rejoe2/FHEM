#$Id: rhasspy-de.cfg 2021-03-04 Beta-User $
# Diese Datei an einem Ort ablegen, den der user fhem lesen kann
# und dann diesen Ort im Attribut configFile hinterlegen. Beispiel:
# attr <rhasspy> configFile ./log/rhasspy-de.cfg
#
# "commaconversion", "units" und "mutated_vowels" sind optional, wenn nicht
# angegeben, werden die englischen Werte/Gepflogenheiten verwendet bzw. keine
# Ersetzungen vorgenommen.

{
  "commaconversion": "1",
  "mutated_vowels": {
    "Ä": "Ae",
    "Ö": "Oe",
    "Ü": "Ue",
    "ß": "ss",
    "ä": "ae",
    "ö": "oe",
    "ü": "ue"
  },
  "units": {
    "unitHours": "(stunde|stunden)",
    "unitMinutes": "(minute|minuten)"
  },
  "responses": {
    "DefaultConfirmation": "OK",
    "DefaultError": "Da ist leider etwas schief gegangen.",
    "NoActiveMediaDevice": "Tut mir leid  es ist kein Wiedergabegerät aktiv.",
    "duration_not_understood": "Tut mir leid ich habe die Dauer nicht verstanden",
    "timerEnd": "taimer abgelaufen",
    "timerSet": "Taimer in $room gesetzt auf $value $unit.",
    "timeRequest": "Es ist $hour Uhr $min",
    "weekdayRequest": "Heute ist $weekDay"
  },
  "Change": {
    "Types": {
      "volumeSound": "Lautstärke",
      "brightness": "Helligkeit",
      "temperature": "Temperatur",
      "battery": "Batterie",
      "waterLevel": "Wasserstand",
      "airHumidity": "Luftfeuchtigkeit",
      "soilHumidity": "Bodenfeuchte",
      "targetValue": "Sollwert"
    },
    "Media": {
      "play": "cmdPlay",
      "pause": "cmdPause",
      "stop": "cmdStop",
      "vor": "cmdFwd",
      "zurück": "cmdBack"
    },
    "regex": {
      "(kälter|wärmer)": "temperature",
      "(dunkler|heller)": "brightness",
      "(lauter|leiser)": "volumeSound",
      "upward": "(höher|heller|lauter|wärmer)",
      "setTarget": "(Helligkeit|Lautstärke|Sollwert)"
    },
    "responses": {
      "volumeSound": {
        "0": "$device ist auf $value gestellt",
        "1": "$device ist auf $value gestellt"
      },
      "brightness": {
        "0": "$device ist auf $value gestellt",
        "1": "$device ist auf $value gestellt"
      },
      "temperature": {
        "0": "Die Temperatur von $location ist $value",
        "1": "Die Temperatur von $location beträgt $value Grad"
      },
      "battery": {
        "0": "Der Wasserstand von $location ist $value",
        "1": "Der Wasserstand von $location beträgt $value Prozent"
      },
      "waterLevel": {
        "0": "Der Wasserstand von $location beträgt $value Prozent",
        "1": "Der Wasserstand von $location beträgt $value Prozent"
      },
      "airHumidity": {
        "0": "Die Luftfeuchtigkeit von $location beträgt $value Prozent",
        "1": "Die Luftfeuchtigkeit von $location beträgt $value Prozent"
      },
      "soilHumidity": {
        "0": "Die Bodenfeuchte von $location beträgt $value Prozent",
        "1": "Die Bodenfeuchte von $location beträgt $value Prozent"
      },
      "knownType": {
        "0": "$mappingType von $location beträgt $value Prozent",
        "1": "$mappingType von $location beträgt $value Prozent"
      },
      "unknownType": {
        "0": "Der Wert von $location beträgt $value Prozent",
        "1": "Der Wert von $location beträgt $value Prozent"
      }
    }
  },
  "States": {
    "responses": {
      "(an|aus)": {
        "0": "$device ist ausgeschaltet",
        "1": "$device ist eingeschaltet"
      },
      "(auf|zu)": {
        "0": "$device ist geöffnet",
        "1": "$device ist geschlossen"
      },
      "(eingefahren|ausgefahren)": {
        "0": "$device ist ausgefahren",
        "1": "$device ist eingefahren"
      },
      "(läuft|fertig)": {
        "0": "$device ist fertig",
        "1": "$device läuft noch"
      }
    }
  }
}
